#!/usr/bin/env sh
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------
#
#   Copyright (c) 2001-2006 The Apache Software Foundation.  All rights
#   reserved.


# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
BASEDIR=`cd "$PRGDIR/.." >/dev/null; pwd`

# Reset the REPO variable. If you need to influence this use the environment setup file.
REPO=


# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
		   if [ -z "$JAVA_HOME" ]; then
		      if [ -x "/usr/libexec/java_home" ]; then
			      JAVA_HOME=`/usr/libexec/java_home`
			  else
			      JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
			  fi
           fi       
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/repo
fi

CLASSPATH="$BASEDIR"/etc:"$REPO"/org/apache/tomcat/embed/tomcat-embed-core/8.5.38/tomcat-embed-core-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-annotations-api/8.5.38/tomcat-annotations-api-8.5.38.jar:"$REPO"/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.38/tomcat-embed-jasper-8.5.38.jar:"$REPO"/org/apache/tomcat/embed/tomcat-embed-el/8.5.38/tomcat-embed-el-8.5.38.jar:"$REPO"/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:"$REPO"/org/apache/tomcat/tomcat-jasper/8.5.38/tomcat-jasper-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-servlet-api/8.5.38/tomcat-servlet-api-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-juli/8.5.38/tomcat-juli-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-el-api/8.5.38/tomcat-el-api-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-api/8.5.38/tomcat-api-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-util-scan/8.5.38/tomcat-util-scan-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-util/8.5.38/tomcat-util-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-jasper-el/8.5.38/tomcat-jasper-el-8.5.38.jar:"$REPO"/org/apache/tomcat/tomcat-jsp-api/8.5.38/tomcat-jsp-api-8.5.38.jar:"$REPO"/com/spotify/docker-client/8.14.1/docker-client-8.14.1-shaded.jar:"$REPO"/com/google/guava/guava/20.0/guava-20.0.jar:"$REPO"/com/fasterxml/jackson/jaxrs/jackson-jaxrs-json-provider/2.9.6/jackson-jaxrs-json-provider-2.9.6.jar:"$REPO"/com/fasterxml/jackson/jaxrs/jackson-jaxrs-base/2.9.6/jackson-jaxrs-base-2.9.6.jar:"$REPO"/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.9.6/jackson-module-jaxb-annotations-2.9.6.jar:"$REPO"/com/fasterxml/jackson/datatype/jackson-datatype-guava/2.9.6/jackson-datatype-guava-2.9.6.jar:"$REPO"/com/fasterxml/jackson/core/jackson-core/2.9.6/jackson-core-2.9.6.jar:"$REPO"/com/fasterxml/jackson/core/jackson-databind/2.9.6/jackson-databind-2.9.6.jar:"$REPO"/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:"$REPO"/org/glassfish/jersey/core/jersey-client/2.22.2/jersey-client-2.22.2.jar:"$REPO"/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar:"$REPO"/org/glassfish/jersey/core/jersey-common/2.22.2/jersey-common-2.22.2.jar:"$REPO"/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:"$REPO"/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.22.2/jersey-guava-2.22.2.jar:"$REPO"/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar:"$REPO"/org/glassfish/hk2/hk2-api/2.4.0-b34/hk2-api-2.4.0-b34.jar:"$REPO"/org/glassfish/hk2/hk2-utils/2.4.0-b34/hk2-utils-2.4.0-b34.jar:"$REPO"/org/glassfish/hk2/external/aopalliance-repackaged/2.4.0-b34/aopalliance-repackaged-2.4.0-b34.jar:"$REPO"/org/glassfish/hk2/external/javax.inject/2.4.0-b34/javax.inject-2.4.0-b34.jar:"$REPO"/org/glassfish/hk2/hk2-locator/2.4.0-b34/hk2-locator-2.4.0-b34.jar:"$REPO"/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:"$REPO"/org/glassfish/jersey/connectors/jersey-apache-connector/2.22.2/jersey-apache-connector-2.22.2.jar:"$REPO"/org/glassfish/jersey/media/jersey-media-json-jackson/2.22.2/jersey-media-json-jackson-2.22.2.jar:"$REPO"/org/glassfish/jersey/ext/jersey-entity-filtering/2.22.2/jersey-entity-filtering-2.22.2.jar:"$REPO"/javax/activation/activation/1.1/activation-1.1.jar:"$REPO"/org/apache/commons/commons-compress/1.9/commons-compress-1.9.jar:"$REPO"/commons-io/commons-io/2.5/commons-io-2.5.jar:"$REPO"/org/apache/httpcomponents/httpclient/4.5/httpclient-4.5.jar:"$REPO"/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:"$REPO"/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:"$REPO"/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar:"$REPO"/com/github/jnr/jnr-unixsocket/0.18/jnr-unixsocket-0.18.jar:"$REPO"/com/github/jnr/jnr-ffi/2.1.4/jnr-ffi-2.1.4.jar:"$REPO"/com/github/jnr/jffi/1.2.15/jffi-1.2.15.jar:"$REPO"/com/github/jnr/jffi/1.2.15/jffi-1.2.15-native.jar:"$REPO"/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:"$REPO"/org/ow2/asm/asm-commons/5.0.3/asm-commons-5.0.3.jar:"$REPO"/org/ow2/asm/asm-analysis/5.0.3/asm-analysis-5.0.3.jar:"$REPO"/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar:"$REPO"/org/ow2/asm/asm-util/5.0.3/asm-util-5.0.3.jar:"$REPO"/com/github/jnr/jnr-x86asm/1.0.2/jnr-x86asm-1.0.2.jar:"$REPO"/com/github/jnr/jnr-constants/0.9.8/jnr-constants-0.9.8.jar:"$REPO"/com/github/jnr/jnr-enxio/0.16/jnr-enxio-0.16.jar:"$REPO"/com/github/jnr/jnr-posix/3.0.35/jnr-posix-3.0.35.jar:"$REPO"/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:"$REPO"/org/bouncycastle/bcpkix-jdk15on/1.59/bcpkix-jdk15on-1.59.jar:"$REPO"/org/bouncycastle/bcprov-jdk15on/1.59/bcprov-jdk15on-1.59.jar:"$REPO"/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar:"$REPO"/com/google/apis/google-api-services-drive/v3-rev173-1.25.0/google-api-services-drive-v3-rev173-1.25.0.jar:"$REPO"/com/google/api-client/google-api-client/1.25.0/google-api-client-1.25.0.jar:"$REPO"/com/google/oauth-client/google-oauth-client/1.25.0/google-oauth-client-1.25.0.jar:"$REPO"/com/google/http-client/google-http-client/1.25.0/google-http-client-1.25.0.jar:"$REPO"/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:"$REPO"/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:"$REPO"/com/google/http-client/google-http-client-jackson2/1.25.0/google-http-client-jackson2-1.25.0.jar:"$REPO"/nebula/nebula-server/1.0-SNAPSHOT/nebula-server-1.0-SNAPSHOT.jar

ENDORSED_DIR=
if [ -n "$ENDORSED_DIR" ] ; then
  CLASSPATH=$BASEDIR/$ENDORSED_DIR/*:$CLASSPATH
fi

if [ -n "$CLASSPATH_PREFIX" ] ; then
  CLASSPATH=$CLASSPATH_PREFIX:$CLASSPATH
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS  \
  -classpath "$CLASSPATH" \
  -Dapp.name="nebulaserver" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dapp.home="$BASEDIR" \
  -Dbasedir="$BASEDIR" \
  nebula.nebulaserver.Server \
  "$@"
